Boost
- C++에서 사용되는 여러가지 유용한 라이브러리들의 집합
- 많은 라이브러리들이 header file로 구현됨
	. Template Programming
	. 장점 : 호환성, 실행 속도
	. 단점 : 가독성, 컴파일 속도
	. 일부는 라이브러리 필요 (예: ASIO)

특징
- IOCP와는 달리 C++ API이다.
- 기존의 Socket API를 전부 C++ API로 재작성했다.
	. 기존 socket 사용 프로그램은 전부 재작성해야한다.
	. C++ API이므로 매우 직관적이고, 사용하기 편한다.
	. Lambda 함수에 매우 의존적이다.
	. socket 객체의 관리에 주의해야한다.
	  - 소멸자가 호출되어야 커널 자료구조가 반환된다.
	  - 포인터가 강제된다. 멀티쓰레드 사용 시 shared_ptr가 강제된다.
- 동기식 동작도 가능하다.
	. 사용법이 매우 간단하다.
	. 기존 socket API를 C++ Layer로 감싼 것

멀티쓰레드 연동
- io_context 객체에 대한 모든 접근은 thread safty를 보장한다.
- 여러 개의 쓰레드에서 io_context::run()을 호출함으로서 병렬성을 얻을 수 있다.
- 내부적으로 비동기 처리를 위해 별도의 쓰레드를 사용할 수 있는데,
  이것의 동작은 최소화 되어있고, 사용자에게 숨겨져 있다.

Strands
- Handler가 여러 쓰레드에서 동시에 처리될 때 순서가 뒤바뀌는 것을 막기 위한 구조
- Handler를 같은 Strand에 등록하면 Handler의 호출이 직렬화 된다.
	. file io에서는 필요하나 network io에서는 필요 없다.

